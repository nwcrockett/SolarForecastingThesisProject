netcdf nsametC1.b1.20060104.000000 {
dimensions:
	time = UNLIMITED ; // (1440 currently)
variables:
	int base_time ;
		base_time:string = "4-Jan-2006,0:00:00 GMT" ;
		base_time:long_name = "Base time in Epoch" ;
		base_time:units = "seconds since 1970-1-1 0:00:00 0:00" ;
	double time_offset(time) ;
		time_offset:long_name = "Time offset from base_time" ;
		time_offset:units = "seconds since 2006-01-04 00:00:00 0:00" ;
	double time(time) ;
		time:long_name = "Time offset from midnight" ;
		time:units = "seconds since 2006-01-04 00:00:00 0:00" ;
	int qc_time(time) ;
		qc_time:long_name = "Quality check results on field: Time offset from midnight" ;
		qc_time:units = "unitless" ;
		qc_time:description = "This field contains bit packed values which should be interpreted as listed. No bits set (zero) represents good data." ;
		qc_time:bit_1_description = "Delta time between current and previous samples is zero." ;
		qc_time:bit_1_assessment = "Indeterminate" ;
		qc_time:bit_2_description = "Delta time between current and previous samples is less than the delta_t_lower_limit field attribute." ;
		qc_time:bit_2_assessment = "Indeterminate" ;
		qc_time:bit_3_description = "Delta time between current and previous samples is greater than the delta_t_upper_limit field attribute." ;
		qc_time:bit_3_assessment = "Indeterminate" ;
		qc_time:delta_t_lower_limit = 60. ;
		qc_time:delta_t_upper_limit = 60. ;
		qc_time:prior_sample_flag = 1 ;
		qc_time:comment = "If the \'prior_sample_flag\' is set the first sample time from a new raw file will be compared against the time just previous to it in the stored data. If it is not set the qc_time value for the first sample will be set to 0." ;
	float atmos_pressure(time) ;
		atmos_pressure:long_name = "Atmospheric pressure" ;
		atmos_pressure:units = "kPa" ;
		atmos_pressure:valid_min = 80.f ;
		atmos_pressure:valid_max = 110.f ;
		atmos_pressure:valid_delta = 1.f ;
		atmos_pressure:missing_value = -9999.f ;
	int qc_atmos_pressure(time) ;
		qc_atmos_pressure:long_name = "Quality check results on field: Atmospheric pressure" ;
		qc_atmos_pressure:units = "unitless" ;
		qc_atmos_pressure:description = "See global attributes for individual bit descriptions." ;
	float temp_mean(time) ;
		temp_mean:long_name = "Temperature mean" ;
		temp_mean:units = "C" ;
		temp_mean:valid_min = -60.f ;
		temp_mean:valid_max = 30.f ;
		temp_mean:valid_delta = 10.f ;
		temp_mean:missing_value = -9999.f ;
	int qc_temp_mean(time) ;
		qc_temp_mean:long_name = "Quality check results on field: Temperature mean" ;
		qc_temp_mean:units = "unitless" ;
		qc_temp_mean:description = "See global attributes for individual bit descriptions." ;
	float temp_std(time) ;
		temp_std:long_name = "Temperature standard deviation" ;
		temp_std:units = "C" ;
	float rh_mean(time) ;
		rh_mean:long_name = "Relative humidity mean" ;
		rh_mean:units = "%" ;
		rh_mean:valid_min = 0.f ;
		rh_mean:valid_max = 104.f ;
		rh_mean:valid_delta = 30.f ;
		rh_mean:missing_value = -9999.f ;
	int qc_rh_mean(time) ;
		qc_rh_mean:long_name = "Quality check results on field: Relative humidity mean" ;
		qc_rh_mean:units = "unitless" ;
		qc_rh_mean:description = "See global attributes for individual bit descriptions." ;
	float rh_std(time) ;
		rh_std:long_name = "Relative humidity standard deviation" ;
		rh_std:units = "%" ;
	float vapor_pressure_mean(time) ;
		vapor_pressure_mean:long_name = "Vapor pressure mean, calculated" ;
		vapor_pressure_mean:units = "kPa" ;
		vapor_pressure_mean:valid_min = 0.001f ;
		vapor_pressure_mean:valid_max = 4.3f ;
		vapor_pressure_mean:valid_delta = 1.f ;
		vapor_pressure_mean:missing_value = -9999.f ;
	int qc_vapor_pressure_mean(time) ;
		qc_vapor_pressure_mean:long_name = "Quality check results on field: Vapor pressure mean, calculated" ;
		qc_vapor_pressure_mean:units = "unitless" ;
		qc_vapor_pressure_mean:description = "See global attributes for individual bit descriptions." ;
	float vapor_pressure_std(time) ;
		vapor_pressure_std:long_name = "Vapor pressure standard deviation" ;
		vapor_pressure_std:units = "kPa" ;
	float wspd_arith_mean(time) ;
		wspd_arith_mean:long_name = "Wind speed arithmetic mean" ;
		wspd_arith_mean:units = "m/s" ;
		wspd_arith_mean:valid_min = 0.f ;
		wspd_arith_mean:valid_max = 100.f ;
		wspd_arith_mean:valid_delta = 20.f ;
		wspd_arith_mean:missing_value = -9999.f ;
	int qc_wspd_arith_mean(time) ;
		qc_wspd_arith_mean:long_name = "Quality check results on field: Wind speed arithmetic mean" ;
		qc_wspd_arith_mean:units = "unitless" ;
		qc_wspd_arith_mean:description = "See global attributes for individual bit descriptions." ;
	float wspd_vec_mean(time) ;
		wspd_vec_mean:long_name = "Wind speed vector mean" ;
		wspd_vec_mean:units = "m/s" ;
		wspd_vec_mean:valid_min = 0.f ;
		wspd_vec_mean:valid_max = 100.f ;
		wspd_vec_mean:valid_delta = 20.f ;
		wspd_vec_mean:missing_value = -9999.f ;
	int qc_wspd_vec_mean(time) ;
		qc_wspd_vec_mean:long_name = "Quality check results on field: Wind speed vector mean" ;
		qc_wspd_vec_mean:units = "unitless" ;
		qc_wspd_vec_mean:description = "See global attributes for individual bit descriptions." ;
	float wdir_vec_mean(time) ;
		wdir_vec_mean:long_name = "Wind direction vector mean" ;
		wdir_vec_mean:units = "deg" ;
		wdir_vec_mean:valid_min = 0.f ;
		wdir_vec_mean:valid_max = 360.f ;
		wdir_vec_mean:missing_value = -9999.f ;
	int qc_wdir_vec_mean(time) ;
		qc_wdir_vec_mean:long_name = "Quality check results on field: Wind direction vector mean" ;
		qc_wdir_vec_mean:units = "unitless" ;
		qc_wdir_vec_mean:description = "See global attributes for individual bit descriptions." ;
	float wdir_vec_std(time) ;
		wdir_vec_std:long_name = "Wind direction vector mean standard deviation" ;
		wdir_vec_std:units = "deg" ;
		wdir_vec_std:missing_value = -9999.f ;
	int pws_err_code(time) ;
		pws_err_code:long_name = "PWS alarm" ;
		pws_err_code:units = "unitless" ;
		pws_err_code:missing_value = -9999 ;
	int pws_mean_vis_1min(time) ;
		pws_mean_vis_1min:long_name = "PWS 1 minute mean visibility" ;
		pws_mean_vis_1min:units = "m" ;
		pws_mean_vis_1min:valid_min = 0 ;
		pws_mean_vis_1min:valid_max = 50000 ;
		pws_mean_vis_1min:missing_value = -9999 ;
	int qc_pws_mean_vis_1min(time) ;
		qc_pws_mean_vis_1min:long_name = "Quality check results on field: PWS 1 minute mean visibility" ;
		qc_pws_mean_vis_1min:units = "unitless" ;
		qc_pws_mean_vis_1min:description = "See global attributes for individual bit descriptions." ;
	int pws_mean_vis_10min(time) ;
		pws_mean_vis_10min:long_name = "PWS 10 minute mean visibility" ;
		pws_mean_vis_10min:units = "m" ;
		pws_mean_vis_10min:valid_min = 0 ;
		pws_mean_vis_10min:valid_max = 50000 ;
		pws_mean_vis_10min:missing_value = -9999 ;
	int qc_pws_mean_vis_10min(time) ;
		qc_pws_mean_vis_10min:long_name = "Quality check results on field: PWS 10 minute mean visibility" ;
		qc_pws_mean_vis_10min:units = "unitless" ;
		qc_pws_mean_vis_10min:description = "See global attributes for individual bit descriptions." ;
	int pws_pw_code_inst(time) ;
		pws_pw_code_inst:long_name = "PWS instantaneous present weather code" ;
		pws_pw_code_inst:units = "unitless" ;
		pws_pw_code_inst:valid_min = 0 ;
		pws_pw_code_inst:valid_max = 99 ;
		pws_pw_code_inst:missing_value = -9999 ;
	int qc_pws_pw_code_inst(time) ;
		qc_pws_pw_code_inst:long_name = "Quality check results on field: PWS instantaneous present weather code" ;
		qc_pws_pw_code_inst:units = "unitless" ;
		qc_pws_pw_code_inst:description = "See global attributes for individual bit descriptions." ;
	int pws_pw_code_15min(time) ;
		pws_pw_code_15min:long_name = "PWS 15 minute present weather code" ;
		pws_pw_code_15min:units = "unitless" ;
		pws_pw_code_15min:valid_min = 0 ;
		pws_pw_code_15min:valid_max = 99 ;
		pws_pw_code_15min:missing_value = -9999 ;
	int qc_pws_pw_code_15min(time) ;
		qc_pws_pw_code_15min:long_name = "Quality check results on field: PWS 15 minute present weather code" ;
		qc_pws_pw_code_15min:units = "unitless" ;
		qc_pws_pw_code_15min:description = "See global attributes for individual bit descriptions." ;
	int pws_pw_code_1hr(time) ;
		pws_pw_code_1hr:long_name = "PWS 1 hour present weather code" ;
		pws_pw_code_1hr:units = "unitless" ;
		pws_pw_code_1hr:valid_min = 0 ;
		pws_pw_code_1hr:valid_max = 99 ;
		pws_pw_code_1hr:missing_value = -9999 ;
	int qc_pws_pw_code_1hr(time) ;
		qc_pws_pw_code_1hr:long_name = "Quality check results on field: PWS 1 hour present weather code" ;
		qc_pws_pw_code_1hr:units = "unitless" ;
		qc_pws_pw_code_1hr:description = "See global attributes for individual bit descriptions." ;
	float pws_precip_rate_mean_1min(time) ;
		pws_precip_rate_mean_1min:long_name = "PWS 1 minute mean precipitation rate" ;
		pws_precip_rate_mean_1min:units = "mm/hr" ;
		pws_precip_rate_mean_1min:valid_min = 0.f ;
		pws_precip_rate_mean_1min:valid_max = 999.99f ;
		pws_precip_rate_mean_1min:valid_delta = 100.f ;
		pws_precip_rate_mean_1min:missing_value = -9999.f ;
	int qc_pws_precip_rate_mean_1min(time) ;
		qc_pws_precip_rate_mean_1min:long_name = "Quality check results on field: PWS 1 minute mean precipitation rate" ;
		qc_pws_precip_rate_mean_1min:units = "unitless" ;
		qc_pws_precip_rate_mean_1min:description = "See global attributes for individual bit descriptions." ;
	float pws_cumul_rain(time) ;
		pws_cumul_rain:long_name = "PWS cumulative liquid precipitation" ;
		pws_cumul_rain:units = "mm" ;
		pws_cumul_rain:valid_min = 0.f ;
		pws_cumul_rain:valid_max = 99.99f ;
		pws_cumul_rain:valid_delta = 50.f ;
		pws_cumul_rain:missing_value = -9999.f ;
	int qc_pws_cumul_rain(time) ;
		qc_pws_cumul_rain:long_name = "Quality check results on field: PWS cumulative liquid precipitation" ;
		qc_pws_cumul_rain:units = "unitless" ;
		qc_pws_cumul_rain:description = "See global attributes for individual bit descriptions." ;
	float pws_cumul_snow(time) ;
		pws_cumul_snow:long_name = "PWS cumulative snow" ;
		pws_cumul_snow:units = "mm" ;
		pws_cumul_snow:valid_min = 0.f ;
		pws_cumul_snow:valid_max = 999.f ;
		pws_cumul_snow:valid_delta = 100.f ;
		pws_cumul_snow:missing_value = -9999.f ;
	int qc_pws_cumul_snow(time) ;
		qc_pws_cumul_snow:long_name = "Quality check results on field: PWS cumulative snow" ;
		qc_pws_cumul_snow:units = "unitless" ;
		qc_pws_cumul_snow:description = "See global attributes for individual bit descriptions." ;
	float cmh_temp(time) ;
		cmh_temp:long_name = "CMH temperature" ;
		cmh_temp:units = "C" ;
		cmh_temp:valid_min = -60.f ;
		cmh_temp:valid_max = 30.f ;
		cmh_temp:valid_delta = 10.f ;
		cmh_temp:missing_value = -9999.f ;
	int qc_cmh_temp(time) ;
		qc_cmh_temp:long_name = "Quality check results on field: CMH temperature" ;
		qc_cmh_temp:units = "unitless" ;
		qc_cmh_temp:description = "See global attributes for individual bit descriptions." ;
	float cmh_dew_point(time) ;
		cmh_dew_point:long_name = "CMH dew point" ;
		cmh_dew_point:units = "C" ;
		cmh_dew_point:valid_min = -60.f ;
		cmh_dew_point:valid_max = 30.f ;
		cmh_dew_point:valid_delta = 10.f ;
		cmh_dew_point:missing_value = -9999.f ;
	int qc_cmh_dew_point(time) ;
		qc_cmh_dew_point:long_name = "Quality check results on field: CMH dew point" ;
		qc_cmh_dew_point:units = "unitless" ;
		qc_cmh_dew_point:description = "See global attributes for individual bit descriptions." ;
	float cmh_sat_vapor_pressure(time) ;
		cmh_sat_vapor_pressure:long_name = "CMH saturation vapor pressure, calculated" ;
		cmh_sat_vapor_pressure:units = "kPa" ;
		cmh_sat_vapor_pressure:valid_min = 0.001f ;
		cmh_sat_vapor_pressure:valid_max = 4.3f ;
		cmh_sat_vapor_pressure:valid_delta = 1.f ;
		cmh_sat_vapor_pressure:missing_value = -9999.f ;
	int qc_cmh_sat_vapor_pressure(time) ;
		qc_cmh_sat_vapor_pressure:long_name = "Quality check results on field: CMH saturation vapor pressure, calculated" ;
		qc_cmh_sat_vapor_pressure:units = "unitless" ;
		qc_cmh_sat_vapor_pressure:description = "See global attributes for individual bit descriptions." ;
	float cmh_vapor_pressure(time) ;
		cmh_vapor_pressure:long_name = "CMH vapor pressure, calculated" ;
		cmh_vapor_pressure:units = "kPa" ;
		cmh_vapor_pressure:valid_min = 0.001f ;
		cmh_vapor_pressure:valid_max = 4.3f ;
		cmh_vapor_pressure:valid_delta = 1.f ;
		cmh_vapor_pressure:missing_value = -9999.f ;
	int qc_cmh_vapor_pressure(time) ;
		qc_cmh_vapor_pressure:long_name = "Quality check results on field: CMH vapor pressure, calculated" ;
		qc_cmh_vapor_pressure:units = "unitless" ;
		qc_cmh_vapor_pressure:description = "See global attributes for individual bit descriptions." ;
	float cmh_rh(time) ;
		cmh_rh:long_name = "CMH relative humidity, calculated" ;
		cmh_rh:units = "%" ;
		cmh_rh:valid_min = 0.f ;
		cmh_rh:valid_max = 105.f ;
		cmh_rh:valid_delta = 30.f ;
		cmh_rh:missing_value = -9999.f ;
	int qc_cmh_rh(time) ;
		qc_cmh_rh:long_name = "Quality check results on field: CMH relative humidity, calculated" ;
		qc_cmh_rh:units = "unitless" ;
		qc_cmh_rh:description = "See global attributes for individual bit descriptions." ;
	float dew_point_mean(time) ;
		dew_point_mean:long_name = "Dew point mean, calculated" ;
		dew_point_mean:units = "C" ;
		dew_point_mean:valid_min = -60.f ;
		dew_point_mean:valid_max = 30.f ;
		dew_point_mean:valid_delta = 10.f ;
		dew_point_mean:missing_value = -9999.f ;
	int qc_dew_point_mean(time) ;
		qc_dew_point_mean:long_name = "Quality check results on field: Dew point mean, calculated" ;
		qc_dew_point_mean:units = "unitless" ;
		qc_dew_point_mean:description = "See global attributes for individual bit descriptions." ;
	float dew_point_std(time) ;
		dew_point_std:long_name = "Dew point standard deviation" ;
		dew_point_std:units = "C" ;
	float trh_err_code(time) ;
		trh_err_code:long_name = "Temperature and relative humidity sensor error code" ;
		trh_err_code:units = "unitless" ;
	float logger_volt(time) ;
		logger_volt:long_name = "Logger voltage" ;
		logger_volt:units = "V" ;
		logger_volt:missing_value = -9999.f ;
		logger_volt:valid_min = 10.f ;
		logger_volt:valid_max = 15.f ;
		logger_volt:valid_delta = 5.f ;
	int qc_logger_volt(time) ;
		qc_logger_volt:long_name = "Quality check results on field: Logger voltage" ;
		qc_logger_volt:units = "unitless" ;
		qc_logger_volt:description = "See global attributes for individual bit descriptions." ;
	float logger_temp(time) ;
		logger_temp:long_name = "Logger temperature" ;
		logger_temp:units = "C" ;
		logger_temp:missing_value = -9999.f ;
		logger_temp:valid_min = -25.f ;
		logger_temp:valid_max = 50.f ;
		logger_temp:valid_delta = 10.f ;
	int qc_logger_temp(time) ;
		qc_logger_temp:long_name = "Quality check results on field: Logger temperature" ;
		qc_logger_temp:units = "unitless" ;
		qc_logger_temp:description = "See global attributes for individual bit descriptions." ;
	float lat ;
		lat:long_name = "North latitude" ;
		lat:units = "degree_N" ;
		lat:valid_min = -90.f ;
		lat:valid_max = 90.f ;
	float lon ;
		lon:long_name = "East longitude" ;
		lon:units = "degree_E" ;
		lon:valid_min = -180.f ;
		lon:valid_max = 180.f ;
	float alt ;
		alt:long_name = "Altitude above mean sea level" ;
		alt:units = "m" ;

// global attributes:
		:command_line = "met_ingest -s nsa -f C1 -R" ;
		:process_version = "ingest-met-4.1-0.el5" ;
		:dod_version = "met-b1-1.1" ;
		:site_id = "nsa" ;
		:facility_id = "C1: Barrow, Alaska" ;
		:data_level = "b1" ;
		:input_source = "/data/collection/nsa/nsametC1.00/nsamettwr4hC1.00.20060104.000000.raw.20060104000000.dat" ;
		:sampling_interval = "variable, see instrument handbook" ;
		:averaging_interval = "60 seconds" ;
		:averaging_interval_comment = "The time assigned to each data point indicates the end of the averaging interval." ;
		:serial_number = "" ;
		:standard_measurement_height = "2m" ;
		:wind_measurement_height = "10m" ;
		:pws = "Present Weather Sensor" ;
		:cmh = "Chilled Mirror Hygrometer" ;
		:qc_standards_version = "1.0" ;
		:qc_method = "Standard Mentor QC" ;
		:qc_comment = "The QC field values are a bit packed representation of true/false values for the tests that may have been performed. A QC value of zero means that none of the tests performed on the value failed.\n",
			"\n",
			"The QC field values make use of the internal binary format to store the results of the individual QC tests. This allows the representation of multiple QC states in a single value. If the test associated with a particular bit fails the bit is turned on. Turning on the bit equates to adding the integer value of the failed test to the current value of the field. The QC field\'s value can be interpreted by applying bit logic using bitwise operators, or by examining the QC value\'s integer representation. A QC field\'s integer representation is the sum of the individual integer values of the failed tests. The bit and integer equivalents for the first 5 bits are listed below:\n",
			"\n",
			"bit_1 = 00000001 = 0x01 = 2^0 = 1\n",
			"bit_2 = 00000010 = 0x02 = 2^1 = 2\n",
			"bit_3 = 00000100 = 0x04 = 2^2 = 4\n",
			"bit_4 = 00001000 = 0x08 = 2^3 = 8\n",
			"bit_5 = 00010000 = 0x10 = 2^4 = 16" ;
		:qc_bit_1_description = "Value is equal to missing_value." ;
		:qc_bit_1_assessment = "Bad" ;
		:qc_bit_2_description = "Value is less than the valid_min." ;
		:qc_bit_2_assessment = "Bad" ;
		:qc_bit_3_description = "Value is greater than the valid_max." ;
		:qc_bit_3_assessment = "Bad" ;
		:qc_bit_4_description = "Difference between current and previous values exceeds valid_delta." ;
		:qc_bit_4_assessment = "Indeterminate" ;
		:zeb_platform = "nsametC1.b1" ;
		:history = "created by user dsmgr on machine reproc1a-rhel5 at 2-Mar-2011,19:31:16, using $State: zebra-zeblib-4.20-0.el5 $" ;
}
